{"version":3,"sources":["app/app-title/index.js","app/app-title/AppTitle.js","app/search-panel/index.js","app/search-panel/SearchPanel.js","app/error-place/index.js","app/error-place/errorPlace.js","app/edit-place/index.js","app/edit-place/EditInput.js","app/todo-list-item/index.js","app/todo-list-item/TodoListItem.js","app/todo-list/index.js","app/todo-list/TodoList.js","app/add-list-item-button/index.js","app/add-list-item-button/AddListItemButton.js","app/index.js","app/app.js","index.js"],"names":["AppTitle","imp","done","className","SearchPanel","state","term","onChange","e","target","value","setState","props","onSearchChange","placeholder","this","React","Component","ErrorPlace","errorText","EditInput","taskId","taskText","onEdited","editShow","useState","inputValue","setInputValue","errorShow","setErrorShow","onSubmit","preventDefault","length","console","log","autoFocus","TodoListItem","task","onDeleted","onEdit","id","impHandler","doneHandler","important","checkEdit","setCheckEdit","TaskTextClassName","TaskClassName","TaskButton","onClick","TodoList","info","elements","map","item","items","key","AddListItemButton","onAddItem","type","App","globalId","db","deleteItem","index","findIndex","el","slice","addItem","text","newItem","impToggle","editPropertys","doneToggle","editItemText","foundTask","find","propName","searchItem","filter","toLowerCase","indexOf","termText","visibleItems","impCount","doneCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e37e2625.chunk.js","sourcesContent":["import AppTitle from './AppTitle';\r\n\r\nexport default AppTitle;","import React from 'react';\r\nimport './AppTitle.css';\r\n\r\nconst AppTitle = ({imp,done})=>{\r\n    return (\r\n        <div className=\"title\">\r\n            <h1>TodoList</h1>\r\n            <div className=\"title_info\"><p>{imp} important</p>\r\n    <p>{done} done</p></div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppTitle;","import SearchPanel from './SearchPanel';\r\n\r\nexport default SearchPanel;","import React from 'react';\r\n\r\nimport './SearchPanel.css';\r\n\r\nclass SearchPanel extends React.Component{\r\n    state={\r\n        term: ''\r\n    }\r\n    onChange= (e)=>{\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n         this.props.onSearchChange(term);\r\n    }\r\n    render(){\r\n    return(\r\n        <div className=\"search_task\">\r\n            <input  placeholder='search task'\r\n            value={this.state.term}\r\n            onChange={this.onChange}/>\r\n                   </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default SearchPanel;","import ErrorPlace from './errorPlace';\r\n\r\nexport default ErrorPlace;","import React from 'react';\r\nimport './errorPlace.css';\r\n\r\nconst ErrorPlace = ({errorText})=>{\r\n    return(\r\n    <div className=\"errorPlace\">{errorText}</div>   \r\n    )\r\n}\r\nexport default ErrorPlace;","import EditInput from './EditInput';\r\n\r\nexport default EditInput;","import React,{useState} from 'react';\r\nimport ErrorPlace from '../error-place';\r\n\r\nimport './EditInput.css';\r\nimport '../todo-list-item/TodoListItem.css';\r\n\r\nconst EditInput = ({taskId,taskText,onEdited,editShow})=>{\r\n    const [inputValue, setInputValue] = useState(taskText);\r\n    const [errorShow,setErrorShow] = useState(false);\r\n    const changeValue = (e)=>{\r\n        setInputValue(e.target.value);\r\n        console.log(inputValue);\r\n      }\r\n      const onSubmit = (e)=>{\r\n          e.preventDefault();\r\n          if(inputValue.length<3){\r\n            setErrorShow(true);\r\n            return\r\n          }\r\n          onEdited(taskId,inputValue);\r\n          setInputValue(\"\"); \r\n          setErrorShow(false);\r\n          editShow(false);\r\n      }\r\n    return(\r\n        <span className=\"task edit_task\">\r\n            <form className=\"edit_input\" onSubmit={onSubmit}>\r\n        <input value={inputValue} onChange={changeValue} autoFocus/>\r\n        <button className=\"task-button imp\"><i className=\"fa fa-check\"></i></button>\r\n        {errorShow &&\r\n             <ErrorPlace  errorText={\"Должно быть больше 3х символов*\"}/>}  \r\n        </form>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default EditInput;","import TodoListItem from './TodoListItem';\r\n\r\nexport default TodoListItem;","import React,{useState} from 'react';\r\nimport EditInput from '../edit-place';\r\n\r\nimport './TodoListItem.css';\r\n\r\nconst TodoListItem =({task,onDeleted,onEdit,id,impHandler,doneHandler,done,important}) =>{\r\n\r\n\r\nconst [checkEdit,setCheckEdit] = useState(false);\r\n\r\nconst onTaskClick = ()=>{\r\n    doneHandler(id);\r\n}\r\n\r\nconst onImportantClick = ()=>{\r\n       impHandler(id);\r\n    }\r\nconst onEditClick = ()=>{\r\n       \r\n        setCheckEdit(true);\r\n}\r\n\r\n    let TaskTextClassName = \"taskText\";\r\n    let  TaskClassName = \"task\";\r\n     let TaskButton = \"task-button\";\r\n      if(done){\r\n          TaskTextClassName += ' done';\r\n      }\r\n      if(important){\r\n         TaskClassName += ' important';\r\n         TaskButton+= ' imp';\r\n      }   \r\n\r\n\r\n       \r\n\r\n       \r\n    return (\r\n     <span>\r\n         {checkEdit ||\r\n        <span className={TaskClassName}>\r\n         <span\r\n         className={TaskTextClassName}\r\n         onClick = {onTaskClick}>\r\n             {task}\r\n             \r\n             </span>\r\n         \r\n   \r\n        \r\n       \r\n        <span className=\"task-buttons\">\r\n    <button \r\n    className={TaskButton}\r\n    onClick={onImportantClick}><i className=\"fa fa-exclamation\"></i>\r\n    </button>\r\n    <button\r\n    className={TaskButton}\r\n    onClick={onEditClick}\r\n    ><i className=\"fa fa-pen\"></i>\r\n    </button>\r\n    <button className={TaskButton}\r\n    onClick={onDeleted}\r\n   ><i className=\"fa fa-trash\"></i></button>\r\n    </span>\r\n\r\n    </span>\r\n}\r\n    {checkEdit && <EditInput taskId={id}\r\n        taskText = {task} \r\n        onEdited={onEdit} \r\n         editShow={setCheckEdit}\r\n        />}\r\n  \r\n    </span>\r\n    );\r\n}\r\n\r\nexport default TodoListItem;\r\n\r\n","import TodoList from './TodoList';\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\n\r\n\r\nconst TodoList = ({info,onDeleted,onEdit,impHandler,doneHandler})=>{\r\nconst elements = info.map((item)=>{\r\n    const {...items} = item;\r\n    const {id}=item;\r\n    return (\r\n        <li key={id} className=\"\">\r\n            <TodoListItem {...items} \r\n            onDeleted = {()=>onDeleted(id)}\r\n            onEdit = {onEdit}\r\n            impHandler={impHandler}\r\n            doneHandler={doneHandler}\r\n            />\r\n           \r\n            </li>\r\n    )\r\n})\r\n\r\n    return (\r\n       <div>\r\n            <ul>\r\n                {elements}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import AddListItemButton from './AddListItemButton';\r\n\r\nexport default AddListItemButton;","import React,{useState} from 'react';\r\nimport ErrorPlace from '../error-place';\r\n\r\nimport './AddListItemButton.css';\r\n\r\nconst AddListItemButton = ({onAddItem})=>{\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [errorShow,setErrorShow] = useState(false);\r\n    const changeValue = (e)=>{\r\n      setInputValue(e.target.value);\r\n    }\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.length<3){\r\n          setErrorShow(true);\r\n          return\r\n        }\r\n        onAddItem(inputValue);\r\n        setInputValue(\"\"); \r\n        setErrorShow(false);\r\n    }\r\n            return(\r\n   \r\n            <form className=\"input_task\" onSubmit={onSubmit}>\r\n            \r\n            \r\n            <input type=\"text\" placeholder=\"enter name of task\" autoFocus onChange={changeValue} value={inputValue} />  \r\n            <button id=\"addTask\">Add Task</button> \r\n            {errorShow &&\r\n             <ErrorPlace  errorText={\"You need type 3 letters or more*\"}/>}  \r\n           \r\n            </form>\r\n            )\r\n        \r\n}\r\nexport default AddListItemButton;","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\n\r\nimport AppTitle from './app-title';\r\nimport SearchPanel from './search-panel';\r\nimport TodoList from './todo-list';\r\nimport AddListItemButton from './add-list-item-button';\r\n\r\nimport './app.css';\r\nclass App extends React.Component {\r\n \r\n  globalId=100;\r\n\r\n  state ={\r\n    db : [\r\n      {task: \"drink coffee\", important: false, done:false,id:1},\r\n      {task: \"walk with dog\", important: false, done:false,id:2},\r\n    ],\r\n    term: \"\"\r\n  } \r\n\r\n  deleteItem = (id) =>{\r\n    this.setState(({db})=>{\r\n      console.log(id);\r\n      const index = db.findIndex((el)=>el.id===id);\r\n      const newDb = [\r\n        ...db.slice(0,index),\r\n        ...db.slice(index+1)\r\n      ];\r\n      return{\r\n        db : newDb\r\n      }\r\n    })\r\n  }\r\n\r\n  addItem = (text)=>{\r\n    \r\n    const newItem = {\r\n      task: text,\r\n      important: false,\r\n      done: false,\r\n      id: this.globalId++\r\n    };\r\n    this.setState(({db})=>{\r\n      \r\n      const newDb = [...db, newItem];\r\n      return {\r\n        db: newDb\r\n      }\r\n    })\r\n  }\r\n  impToggle = (id)=>{\r\n    this.setState(({db})=>{\r\n      return{\r\n      db:this.editPropertys(db,id,'important')\r\n      }\r\n    })\r\n  }\r\n\r\n  doneToggle = (id)=>{\r\n    this.setState(({db})=>{\r\n      return{\r\n      db:this.editPropertys(db,id,'done')\r\n      }\r\n    })\r\n  }\r\n  editItemText=(id,text)=>{\r\n    this.setState(({db})=>{\r\n      const index  = db.findIndex(el=>el.id===id);\r\n      const foundTask = db.find(el=>el.id===id);\r\n     foundTask.task= text;\r\n      const newDb =[...db.slice(0,index), foundTask, ...db.slice(index+1)];\r\n      return{\r\n      db:newDb\r\n     }\r\n    });\r\n  }\r\n  editPropertys = (db,id,propName)=>{\r\n   \r\n    const index  = db.findIndex(el=>el.id===id);\r\n    const foundTask = db[index];\r\n   const newItem = {\r\n     ...foundTask, [propName] : !foundTask[propName]\r\n   }\r\n    const newDb =[...db.slice(0,index), newItem, ...db.slice(index+1)];\r\n    return newDb;\r\n  }\r\n\r\n\r\n  searchItem = (db,term)=>{\r\n    if(term===\"\"){\r\n      return db;\r\n    }\r\n    return db.filter((item)=>{\r\n      return item.task.toLowerCase().indexOf(term.toLowerCase()) >-1;\r\n    })\r\n  }\r\n\r\n  onSearchChange = (termText)=>{\r\n    const term= termText;\r\n    this.setState({term});\r\n  }\r\n  \r\n  render(){\r\n  const {db,term} = this.state;\r\n  const visibleItems= this.searchItem(db,term);\r\n\r\n  const impCount = db.filter(el=>el.important).length;\r\n  const doneCount = db.filter(el=>el.done).length;\r\n    return (\r\n      <div className=\"container\">\r\n        <div id=\"todoList\">\r\n        <div className=\"header\">\r\n        <SearchPanel onSearchChange={this.onSearchChange} />\r\n        <AppTitle imp={impCount} done={doneCount} />\r\n       \r\n        </div>\r\n        <TodoList \r\n        info={visibleItems}\r\n        onDeleted={this.deleteItem}\r\n        onEdit={this.editItemText} \r\n        impHandler = {this.impToggle}\r\n        doneHandler = {this.doneToggle}\r\n        />\r\n        <AddListItemButton \r\n        onAddItem = {this.addItem}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}